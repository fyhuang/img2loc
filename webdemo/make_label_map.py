import sys

import s2sphere

from mlutil import label_mapping

m = label_mapping.LabelMapping.read_csv(sys.argv[1])

def get_ancestor_labels(s2cell, m):
    ancestor_labels = []
    while s2cell.level() > 0:
        s2cell = s2cell.parent()
        ancestor_token = s2cell.to_token()
        if m.has_name(ancestor_token):
            ancestor_labels.append(m.get_label(ancestor_token))
    return ancestor_labels

print("""
'set strict';
// Generated by make_label_map.py

export const LABEL_MAP = (function() {
    const kvArray = [
""")

for label in range(len(m)):
    token = m.get_name(label)
    s2cell = s2sphere.CellId.from_token(token)

    # Get lat/lng of this cell
    latlng = s2cell.to_lat_lng()
    (lat, lng) = latlng.lat().degrees, latlng.lng().degrees

    # Get ancestors of this cell in the label mapping
    ancestor_labels = get_ancestor_labels(s2cell, m)
    ancestor_labels_string = "[" + ", ".join(str(x) for x in ancestor_labels) + "]"

    cell_object = f"{{ token: \"{token}\", lat: {lat}, lng: {lng}, level: {s2cell.level()}, ancestors: {ancestor_labels_string} }}"

    print(f"        [{label}, {cell_object}],")

print("""
    ]; // kvArray

    const map = new Map(kvArray);
    return map;
})()
""")